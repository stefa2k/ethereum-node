---
- block:
  - name: Prysm - Get validator service's api token
    command: "docker exec -u 0 -w /opt/app/data/wallets stereum-{{ validator_service }} cat auth-token"
    changed_when: false
    register: auth_token
    become: yes
  - name: Print out auth_token
    debug:
      msg: "{{ auth_token.stdout_lines[1] }}"
  - name: Get api-token
    set_fact:
      api_token: "{{ auth_token.stdout_lines[1] }}"
  - name: Print out api_token
    debug:
      msg: "{{ api_token }}"
  - include_tasks: import.yaml
    vars:
      validator_port: 7500
    loop: "{{ validator_keys }}"
  when: consClient == "prysm"

- block:
  - name: Lighthouse - Get validator service's api token
    command: "docker exec -u 0 -w /opt/app/validator/validators stereum-{{ validator_service }} cat api-token.txt"
    changed_when: false
    register: api_token_lh
    become: yes
  - name: Print out api_token
    debug:
      msg: "{{ api_token_lh.stdout }}"
  - include_tasks: import.yaml
    vars:
      validator_port: 5062
      api_token: "{{ api_token_lh.stdout }}"
    loop: "{{ validator_keys }}"
  when: consClient == "lighthouse"

- block:
  - name: Nimbus - Get validator service's api token
    command: "docker exec -u 0 -w /opt/app/validators stereum-{{ beacon_service }} cat api-token.txt"
    changed_when: false
    register: api_token_n
    become: yes
  - name: Print out api_token
    debug:
      msg: "{{ api_token_n.stdout }}"
  - include_tasks: import.yaml
    vars:
      validator_port: 5052
      api_token: "{{ api_token_n.stdout }}"
      validator_service: "{{ beacon_service }}"
    loop: "{{ validator_keys }}"
  when: consClient == "nimbus"

- block:
  - name: Teku - Get validator service's api token
    command: "docker exec -u 0 -w /opt/app/data/validator/key-manager stereum-{{ beacon_service }} cat validator-api-bearer"
    changed_when: false
    register: api_token_t
    become: yes
  - name: Print out api_token
    debug:
      msg: "{{ api_token_t.stdout }}"
  - include_tasks: import.yaml
    vars:
      validator_port: 5052
      api_token: "{{ api_token_t.stdout }}"
      validator_service: "{{ beacon_service }}"
      api_service_protocol: "--insecure https"
    loop: "{{ validator_keys }}"
  when: consClient == "teku"

# EOF
